version: "3.8"

volumes:
  prometheus:
  grafana:
  alertmanager-data:

services:

  grafana:
    image: grafana/grafana:9.1.6
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v2.27.0
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      [
        '--log.level=debug',
        '--config.file=/etc/prometheus/prometheus.yml',
        '--enable-feature=remote-write-receiver',
        '--query.lookback-delta=30s'
      ]

  # for testing purposes only, disable in production
  log-generator:
    image: mingrammer/flog
    command:
      - --loop
      - --format=json
      - --number=10 # number of log lines to generate per second
      - --delay=100ms # delay between log lines
      - --output=/var/log/generated-logs.txt
      - --overwrite
      - --type=log
    volumes:
      - ./logs/:/var/log/

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler &&
        minio server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./.data/minio:/data

  loki:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/loki-read.yaml:/etc/loki/loki-read.yaml
      - ./config/loki-write.yaml:/etc/loki/loki-write.yaml
      - ./config/loki-backend.yaml:/etc/loki/loki-backend.yaml
    ports:
      - "8080:8080"

  # alertmanager to enable receiving alerts
  alertmanager:
    image: prom/alertmanager:v0.23.0
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./config:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug